/* ----------------------best practice------------------------ */
/* it is not the best practice to use id in css. use class */
/* inline style is the strongest but itis't the best practice */
/* if the class containts two words, the best practioce is to use hyphen (-) kebab-case*/
/* the space between selectors must be the same  */
/* the best practice is to make space between a class and curly brackets */
/* the best practice is to make space between a property and its value */

/* --------------------Explain--------------------- */
/* background-attachment: fixed -- scroll */
/* background-position : left top -- 50% 50% */
/* margin auto divice the space  */

/* ----------------------------------------------------- */

/* p{
    color: red;
    background-color: black;
    font-size: 40px;
    width: 70%;
    padding: 10px;

    margin-left: auto;
    margin-right: auto;
} */
/* ---------------------------------------- */
/* div {
    background-color: #8a2be2;
    width: 500px;
    margin: 20px auto;
    padding: 20px;
}

.assign-1-shape-2 {
    background-color: rgba(137, 43, 226, 0.5);
}

.assign-1-shape-3 {
    background-color: rgba(137, 43, 226, 0.1);
} */
/* ------------------------------------------- */

/* div {
    width: 400px;
    height: 400px;
    background-color: aqua;
    background-image: url(./imgs/task1.png);
    margin: 10px;
}

.assign-2-shape-1 {
    background-repeat: no-repeat;
}

.assign-2-shape-2 {
    background-repeat: repeat-y;
}

.assign-2-shape-3 {
    background-repeat: repeat-x;
} */
/* ---------------------------------------- */

/* div {
    width: 400px;
    height: 400px;
    margin: 10px;
    background-color: #23d65962;
    background-image: url(imgs/task1.png);
}

.assign-3-shape-1 {
    background-repeat: no-repeat;
}

.assign-3-shape-2 {
    background-position: right;
    background-repeat: repeat-y;
}

.assign-3-shape-3 {
    background-position: bottom;
    background-repeat: repeat-x;
} */

/* --------------------------------------------- */

/* div {
    width: 400px;
    height: 400px;
    background-color: aqua;
    margin: 20px;
    background-image: url(imgs/task1.png);
}

.assign-4-shape-1 {
    background-repeat: no-repeat;
    background-size: 80%;
}

.assign-4-shape-2 {
    background-position: right;
    background-repeat: no-repeat;
    background-size: 80% 100%;
}

.assign-4-shape-3 {
    background-position: bottom;
    background-repeat: no-repeat;
    background-size: 100% 80%;
}

.assign-4-shape-4 {
    background-position: bottom right;
    background-repeat: no-repeat;
    background-size: 50%;
} */

/* ---------------------------------------------------- */

/* 
div {
    width: 400px;
    height: 200px;
    background-color: greenyellow;
    margin: auto;
    margin-top: 30px;
    padding: 10px;
    border: solid blue 10px;
    outline: brown solid 20px;

} */
/* ------------------------------------------------ */

/* div {
    background-color: rgba(177, 55, 55, 0.192);
    display: inline-block;
    padding: 70px 90px;
    margin:20px;
    border: 5px solid;
    outline: 5px solid;
}

.shape1 {
    border-color: red;

}

.shape2 {
    border-color: blue rgb(6, 223, 6);
}

.shape3 {
    border-color: red green blue yellow;
    border-style: dashed;
} */
/* -------------------------------------------- */
/* 
div {
    width: 400px;
    background-color: #f1f1f1;
    margin: 40px;
    padding: 20px;
    border-left: solid 10px rgb(221, 77, 144);
    outline: solid 10px #f1f1f1;
}

.shape2 {
    visibility: hidden;
}

.shape3 {
    border-left-color: rgb(39, 223, 162);
} */

/* ----------------------------------------------- */
/* in nesting the big parent takes all classes inside it but doesn't take elements. it overwrite classes */
/* it overwrite if i wrote parent .class */
/* .child .title {
    color: red;
}

.parent span {
    color: blue;
}

p, .title {
    color: green;
} */

/* div {
    background-color: brown;
    padding: 30px;
    margin: 25px;
    color: black;
    font-size: 20px;
    max-width:400px;
    width: fit-content;
    max-height: 30px;
    
}

.four {
    overflow: hidden;
} */

/* ------------------------------------------- */
/* div {
    font-size: 80px;
    text-shadow: 3px 3px 0 red, 6px 6px 0 blue, 9px 9px 0 pink;
    /* text-shadow: 0 0 3px red, 0 0 3px blue, 0 0 3px pink; */

/* ------------------------------------- */

/* p {
    font-family:sans-serif;
    text-align: center;
}
.one {
    font-size: 70px;
    text-transform: uppercase;
}

.two {
    font-size: 65px;
    text-transform: capitalize;
}

.three {
    font-size: 60px;
}
 */
/* --------------------------------------------------- */

/* div {
    width: 400px;
    background-color: #ddd9d9;
    margin: 20px;
    padding: 20px;
    font-size: 20px;
    font-family: sans-serif;
    
}

.two {
    white-space:nowrap;
    overflow:hidden;
    text-overflow:clip;
}



.three {
    font-size: 18px;
    word-spacing: -1px;
    white-space:nowrap;
    text-overflow: ellipsis;
    overflow:hidden;
} */

/* ----------------------------------------- */
/* noteeee */
/* i couldn't make zero in the center  when i used height
it worked when i used padding. you can't center it vertically after using height because it leaves a space after the word */
/* a {
    display: block;
    width: 250px;
    padding: 30px;
    background-color: rgb(41, 230, 205);
    color: white;
    font-family: sans-serif;
    font-weight: bold;
    font-size: 60px;
    text-decoration: none;
    text-transform: capitalize;
    border-bottom: solid 5px rgb(2, 68, 68);
    text-align: center;

} */
/* ---------------------------------------- */

/* div {
    width: 300px;
    text-align: center;
    padding:20px;
    border: orangered solid ;
}

p {
    background-color: #eee;
    padding: inherit;
    margin: inherit;
    border: inherit;
}


div {
    text-align: center;
    padding:20px;
    border: green solid ;
}

p {
    background-color: #eee;
    padding: inherit;
    margin: inherit;
    border: inherit;
} */

/* -------------------------------------------- */
/* 
div {
    margin: auto;
    text-align: center;
}

.div1 {
    font-family: 'Open Sans', sans-serif;
    font-size: 2em;
}

.div2 {
    font-family: 'Cairo', sans-serif;
    font-size: 2em;
}

.div3 {
    font-family: 'Jomhuria', cursive;
    font-size: 2em;
} */

/* ------------------------------------------------ */
/* div {
    font-family: sans-serif;
    text-align: center;
}

.div1 {
    font-size: 2.5rem;
}

.div2 {
    font-size: 2rem;
}

.div3 {
    font-size: 1.5rem;
} */

/* ---------------------------------------------- */

/* noteee in the float :
we use overflow hidden or auto to fix the float issue.
it hides the content outside the parent buttttt not actually 
hide it. it get them back to the parent. that's beacause the mechanism 
of the float is different from othe css properties
-- we can also use clear
*/
/* ---------------------------------------------------- */

/* .parent {
    padding: 0;
    background-color: #eee;
    width: 800px;
    overflow: hidden;
    text-align: center;
    font-family: sans-serif;
    margin: auto;
}
.parent div {
    margin-top: 15px;
    margin-left: 15px;
    background-color: #d6cdcd;
    padding: 10px 0;
    
}


.full {
    width:calc(100% - 30px);
}

.three {
    float: left;
    width:calc((100% - 60px) /3);
}

.two {
    float: left;
    width: calc((100% - 45px)/2);

}

.four {
    float: left;
    width: calc((100% - 75px)/4);
    margin-bottom: 15px;
} */

/* ------------------------------------------------------- */

/* div {
    margin: 20px auto;
    width: 300px;
    font-weight: bold;
    font-size: 1rem;
    padding: 20px;
    background-color:rgb(161, 150, 150) ;
    color: black;
  }

.one {
    background-color:rgb(161, 150, 150,0.1) 
}

.two {
    opacity: 0.1;
} */

/* ---------------------------------------------------------------- */

/* 
position fixed and absolute acts like float. the element gets out the flow
but relative and sticky doesn't
*/

/* when an element takes position relative in move according to it self 
and whem it takes position absolute it it moves according to the body
---------- if i want the element that took position absolute move 
according to its direct parent, i give the parent position relative
*/

/* 
the difference between absolute and fixed is that when you 
scroll the fixed one is still in its place and it is seen  but the absolute is still in its place but moves and disapear with scroll
andddddd fixed does't care if the parent is absolute or relative

*/

/* 
the position sticky is like fixed a little bit it moves with the scroll 
till a specific point
*/
/* ------------------------------------------------------------------- */

/* div {
    width: 100px;
    height: 100px;
    position: absolute;
}

.green {
    background-color: green;
    z-index: 3;
    top: 30px;
    left: 30px;
}

.red {
    background-color: red;
    z-index: 4;
    top: 40px;
    left: 40px;
}

.blue {
    background-color: blue;
    top: 20px;
    left: 20px;
    z-index: 2;
}

.black {
    background-color: black;
    top: 30px;
    left: 20px;
} */

/* -------------------------------------------------------- */

/* div {
    width: 400px;
    margin: auto;
    margin-top: 40px;
    position: relative;
    background-color: #eee;
    padding: 30px;
    border-bottom: orangered solid;
    border-top: orangered solid;
    border-right: blue solid;
    border-left: blue solid;
    line-height:2;
}
.top-left, .bottom-left, .top-right, .bottom-right {
    position: absolute;
    display: inline-block;
    width: 30px;
    background-color: blue;
    text-align: center;
    color: white;
    text-transform: -50%;
    padding: 10px;
    
}
.top-left, .bottom-left {
    border-right: orangered solid;
}
.top-right, .bottom-right {
    border-left: orangered solid;
}

.top-left {
    top: -26px;
    left: -26.5px;
}

.bottom-left {
    bottom: -26px;
    left: -26.5px;
}

.top-right {
    top: -26px;
    right: -26.5px;
}

.bottom-right {
    bottom: -26px;
    right: -26.5px;
} */

/* ------------------------------------------------- */

/* .main {
    padding: 40px;
    width: 400px;
    margin: auto;
    font-family: Arial, Helvetica, sans-serif;
    
}

ul li {
    margin: 10px;
    background-color: #eee;
    list-style: none;
    padding: 10px;
}

.html li, .css li, .js li {
    background-color: white;
}

.html li {
    list-style:decimal;
}

.css li {
    list-style:upper-roman ;
}

.js li {
    list-style: inside;
    list-style-type: circle;
} */

/* -------------------------------------------- */

/* img {
    width: 40px;
    vertical-align:bottom;
}

table {
    text-align: center;
    width: 700px;
}

td {
    padding: 15px 0;
    background-color: #eee;
}

th {
    padding: 10px;
    background-color: rgb(66, 25, 1);
    color: white;
}

#view{
    background-color: rgb(22, 141, 221);
    color: white;
    border-style: none;
    padding: 5px;
}

#del {
    background-color: rgb(252, 140, 159);
    color: white;
    border-style: none;
    padding: 5px;
} */
/* ------------------------------------------------------------- */

/* div:first-of-type, div:last-of-type {
    background-color: #eee;
    text-align: center;
    width: 300px;
    margin: auto;
    padding: calc((60px - 18px) / 2) 0;
}

div:empty {
    width: 300px;
    height: 60px;
    background-color: red;
    margin: auto;
    margin-top: 20px;
    margin-bottom: 20px;
} */

/* ---------------------------------------------- */

/* i couldn't use the position because i think it's a letter */

/* div {
    padding: 20px 0;
    background-color:#eee ;
    width: 500px;
    margin: 40px auto;
    text-align: center;
}

div::first-letter {
    padding: 10px;
    background-color: red;
    color: white;
    float: left;
    margin-left: -14px;
    margin-top: -10px;
    
} */

/* ------------------------------------------------------ */

/* p {
    background-color: #6ee;
    position: relative;
    left: 100px;
    border-left: solid 3px #e91e63;
    padding: 20px;
    margin: 10px;
    width: 50%;
}

p::before {
    content: attr(data-person) ;
    background-color: #eee;
    padding: 10px;
    width: 50px;
    text-align: center;
    position: fixed;
    left: 5px;
    margin-top: -10px;
}

p::after {
    content: "";
    background-color:transparent;
    position: absolute;
    left: -20px;
    margin-top: -2px;
    border: 10px solid;
    border-color: transparent #e91e63 transparent transparent ;

} */

/* ---------------------------------------------------------- */

/* the pseudo elemet should take position if it's empty to appear */
/* i can use counter-reset in the bodey before to start the counter before the incrementation */
/* and i can use just counter-increment in the main element and content counter in the pseudeo element */

/* p {
    width: 400px;
    background-color: #eee;
    padding: 20px 90px;
    position: relative;
    counter-increment: section;
}

p::after {
    content: "";
    position: absolute;
    right: 0;
    top: 0;
    height: 100%;
    width: 3px;
    background-color: orangered;
}

p::before {

    
    content: counter(section);
    position: absolute;
    color: white;
    background-color: orangered;
    padding: 20px 30px;
    left: 0;
    top: 0;
    text-align: center;
    font-weight: bold;

} */

/* ---------------------------------------------------------------------- */

/* div {
    height: 100px;
    width: 100px;
    background-color: #eee;
    display: inline-block;
    margin: 20px;
    border: solid black;
    border-radius: 50%;
    box-shadow: -5px -5px 0 0 #e91e63, 5px 5px 0 0 rgb(22, 141, 221) ;
    counter-increment: section;
    text-align: center;
    position: relative;
}


div::before {
    content: counter(section);
    color: white;
    background-color: black;
    border-radius: 50%;
    display: inline-block;
    width: 20px;
    height: 20px;
    position: relative;
    top: -9px;
    
} */

/* ---------------------------------------------- */
/* div {
    width: 100px;
    height: 100px;
    background-color: #eee;
    border-radius: 20px 40px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    box-shadow: 1px 1px 8px 0 rgba(0, 0, 0, 0.452) inset, -1px -1px 8px 0 rgba(0, 0, 0, 0.452) inset;
} */

/* ------------------------------------------------------ */

/* * {
    margin: 0;
    padding: 0;
    text-align: center;
    font-family: sans-serif;
    font-weight: bold;
}

.container {
    width: 550px;
    box-sizing: border-box;
    overflow: hidden;
}



.basic {
    background-color: #eee;
    width: calc((100% - 82px) / 2);
    display:inline-block;
    float: left;
    margin-left: 20px ;
    height:245px;
}

.sep {
    float: left;
    background-color: black;
    width: 2px;
    height: 245px;
    margin-left: 20px;
    position: relative;
}

.sep::before {
    content: "or";
    background-color: rgb(22, 141, 221);
    width: 20px;
    height: 20px;
    border-radius: 50%;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.title {
    background-color: rgb(22, 141, 221);
    width: 80%;
    margin: auto;
    margin-top: 10px;
    padding: 10px 0; 

}

.word {
    width: 80%;
    margin: auto;
    margin-top: 20px;
    background-color: #fff;
    border-radius: 50%;
    padding: calc(40% - 16px) 0;
    box-sizing: border-box;
} */

/* ---------------------------------------------------- */

/* 
note : only the vertical margin can collapse
bigger margin wins
that happens with elements that doesn't have anything between 
nesting doesn't prebvent collapsing
*/

/* ------------------------------------------- */

/* .container {
    background-color: #eee;
    width: 500px;
    margin: auto;
    text-align: center;
    margin-top: 80px;
    padding-top: 20px;
    height: 240px;
    font-family: Arial, Helvetica, sans-serif;
}

.son {
    background-color: #ccc;
    width: 80%;
    margin: auto;
    margin-top: 40px;
    padding: 30px;
    
}


.container:hover {
    margin-top: 40px;
    transition-duration:  0.5s;
}

.container:hover .son{
    margin-top: 100px;
    transition: 0.5s 0.5s;
} */

/* ----------------------------------------------------------- */

/* div {
    position: relative;
    visibility: hidden;
}

div::after {
    content: "Elzero";
    background-color: #eee;
    color: Black;
    padding: 20px;
    border: none;
    font-size: 20px;
    width: 400px;
    margin: auto;
    box-sizing: border-box;
    text-align: center;
    font-family: Arial, Helvetica, sans-serif;
    font-weight: bold;
    position: absolute;
    visibility: visible;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
} */

/* ----------------------------------------- */

/* :root {
    --mainColor: #009688;
    --mainPadding: 10px;
  }
  
  div {
    color: var(--mainColor, red);
    padding: var(--mainPadding, 10px);
    border: var(--mainColor, black) solid 2px;
    margin: var(--mainPadding, 10px);
  } */

/* -------------------------------------------------- */
/* 
div {
    width: 100px;
    height: 100px;
    color: #ff5722;
    font-size: 20px;
    font-weight: bold;
    font-family: Arial, Helvetica, sans-serif;
    margin: auto;
    border-right: #ff5722 solid 4px;
    border-left: #03a9f4 solid 4px;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
} */

/* ------------------------------------------------------------ */

/* .parent {
    width: 600px;
    height: 300px;
    margin: auto;
    display: flex;
    flex-wrap: wrap;
    align-content: space-between;
    justify-content: space-around;
    background-color: #ccc;
}

.parent div {
    width: calc((100% - 30px) / 3);
    background-color: orangered;
    padding: 15px 0;
    text-align: center;
    margin: 5px 0;
} */
/* ----------------------------------------------------- */

/* .parent {
    width: 600px;
    height: 300px;
    margin: auto;
    background-color: #ccc;
    padding: 5px;
    display: flex;
    flex-wrap: wrap-reverse;
    justify-content: space-between;
    flex-direction: row-reverse;
    color: wheat;
    


}
.parent div {
    background-color: #607d8b;
    width: calc((100% - 30px) / 3);
    display: flex;
    justify-content: center;
    align-items: center;
}


.one {
    align-self: flex-start;
    padding: 5px 0;
}


.three {
    visibility: hidden;
    position: relative;
}

.three::before {
    content: "5";
    visibility: visible;
    background-color: #607d8b;
    width: 100%;
    height: 100%;
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
}



.five {
    align-self: flex-end;
    padding: 5px 0;
    visibility: hidden;
    position: relative;
}

.five::before {
    content: "3";
    visibility: visible;
    background-color: #607d8b;
    width: 100%;
    height: 100%;
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
} */

/* ---------------------------------------------------------- */

/* .parent {
    width: 600px;
    height: 300px;
    background-color: #eee;
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    justify-content: space-between;
    padding: 10px;
    box-sizing: border-box;
    color: white;
    margin: auto;
}

.parent div {
    background-color: #009688;

}
.one, .three {
    padding: 25px 15px;
}
.two {
    align-self: flex-start;
    width: 50%;
    text-align: center;
    padding: 25px 0;
} */

/* ----------------------------------------------------------- */
/* wrap-reverse affects the flex-start */

/* .parent {
    width: 600px;
    height: 300px;
    background-color: #eee;
    padding: 10px;
    box-sizing: border-box;
    color: white;
    margin: auto;
    display: flex;
    justify-content: space-between;


}

.parent div {
    width: calc(80% / 4);
    height: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.one {
    background-color: #ff9800;
    order: 2;

}

.two {
    background-color: #8bc34a;
    order: 3;
    align-self: flex-end;
}

.three {
    background-color: #795548;
    order: 4;
}


.four {
    background-color: #673ab7;
    order: 1;
    align-self: flex-end;
} */

/* ------------------------------------------------------------- */

/* :root {
    --contentBack : #ccc;
    --coreHeight :250px;
    --radius : 5px;
    --gap : 10px;
}


 *{
    margin: 0;
    padding: 0;
    font-family: Arial, Helvetica, sans-serif;
 }

.page {
    background-color: #eee;
    padding: 10px;
    display: flex;
    flex-direction: column;
    gap: var(--gap);
}
.header {
    display: flex;
    justify-content: space-between;

}

.logo {
    width: 10%;
    background-color: var(--contentBack, red);
    padding: 10px;
    text-align: center;
    border-radius: var(--radius);
    margin-right: 10px;

    
}
.links {
    list-style: none;
    display: flex;
    gap: var(--gap);
    justify-content: flex-end;
    background-color: var(--contentBack, red);
    padding: 10px;
    flex-grow: 1;
    border-radius: 5px;
}

.main-area {
    display: flex;
    gap: var(--gap);
    height: var(--coreHeight);
}
.content {
    width: 70%;
    
    background-color: var(--contentBack, red);
    border-radius: var(--radius);
    

}

.sidebar {
    width: calc(30%);
    background-color: var(--contentBack);
    border-radius: var(--radius);
}

.footer {
    display: flex;
    padding: 10px;
    background-color: var(--contentBack);
    border-radius: var(--radius);
    justify-content: space-between;
} */

/* -------------------------------------------------------------------- */

/* noteeee : you con't use pseudo elment ::first-letter when using display-flex */

/* * {
  padding: 0;
  margin: 0;
}

.task {
  width: 600px;
  height: 200px;
  background: #eee;
  font-size: 50px;
  font-weight: bold;
  letter-spacing: 5px;
  text-align: center;
  line-height: 200px;
  margin: 20px auto;
  position: relative;
  border-right: solid 15px #673ab7;
  border-left: solid 15px #f44336;
}

.task::after {
  content: "";
  width: 100%;
  height: 15px;
  position: absolute;
  left: 0;
  top: 0;
  background-image: linear-gradient(
    to right,
    #f44336 20%,
    #2196f3 20%,
    #2196f3 40%,
    #4caf50 40%,
    #4caf50 60%,
    #e91e63 60%,
    #e91e63 80%,
    #673ab7 80%
  );
} */

/* notee : to prevent the color merging you should put start and end */
/* .task::before {
    content: "";
    width: 100%;
    height: 15px;
    position: absolute;
    left: 0;
    bottom: 0;
    background-image: linear-gradient(
      to right,
      #f44336 20%,
      #2196f3 20%,
      #2196f3 40%,
      #4caf50 40%,
      #4caf50 60%,
      #e91e63 60%,
      #e91e63 80%,
      #673ab7 80%
    );
  }

.task::first-letter {
    color: #f44336;
} */

/* ------------------------------------------------------ */

/* div {
    width: 600px;
    box-sizing: border-box;
    height: 50px;
    background-color: #eee;
    margin: 20px auto;
    display: flex;
    align-items: center;
    position: relative;
    padding-left: 10px;
    color: #797c84;
    caret-color: #f44336;
}

div::after {
    content: "";
    width: 100%;
    height: 5px;
    position: absolute;
    background-image: linear-gradient(to right, #f44336 50%, #009688 50%);
    left: 0;
    bottom: 0;
}

div:focus {
    color: black;
} */

/* ------------------------------------------------------------- */

/* .grid {
    background-color: #ddd;
    padding: 20px;
    width: 800px;
    height: 400px;
    margin: auto;
    display: grid;
    grid-template-columns: 1fr 1fr 1fr ;
    grid-template-rows: 40px 1fr;
    color: white;
    gap: 10px;
    font-weight: bold;

  }
  .grid div {
    counter-increment: section;
    background: #607d8b;
    display: flex;
    justify-content: center;
    align-items: center;

  }
  .grid div::after {
    content: "Element " counter(section);
  } */

/* ----------------------------------------------- */

/* .layout {
    background-color:#eee;
    height: 100vh;
    display: grid;
    grid-template-areas: "head head head head head head head head head head"
    "sec sec sec sec sec sec sec sec sec as " 
    "foot foot foot foot foot foot foot foot foot foot";
    grid-template-columns: repeat(9, 1fr) 200px ;
    grid-template-rows: 50px 1fr 50px;

}

header {
    background:#03a9f4;
    grid-area:head;
}

header::after {
    content: "Header";
}


section {
    background: #ff5722;
    grid-area: sec;
}

section::after {
    content: "Section";
}


aside {
    background:#607d8b;
    grid-area: as;
}

aside::after {
    content: "Aside";
}

footer {
    background-color:#009688;
    grid-area: foot;
}

footer::after{
    content: "Footer";
} */
/* --------------------------------------------------------- */
/* 
.grid {
    background-color: #ddd;
    padding: 20px;
    width: 800px;
    height: 400px;
    box-sizing: border-box;
    color: white;
    font-weight: bold;
    margin: auto;
    display: grid;
    gap: 10px;
    grid-template-columns: auto 1fr 1fr auto;
    grid-template-rows: 1fr ;

  }


.grid div {
    background: brown;
    display: flex;
    justify-content: center;
    align-items: center;
} */
/* -------------------------------------------- */

/* .grid {
    background-color: #ddd;
    padding: 20px;
    width: 800px;
    height: 400px;
    margin: auto;
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    grid-template-rows: repeat(6, 1fr);
    gap: 10px;
  }

  .grid div {
    background-color:#009688 ;
    color: white;
    font-weight: bold;
    display: flex;
    justify-content: center;
    align-items: center;
  }

.one {
    grid-column: 1 / -1;
} 

.two {
    grid-area: 2 / 1 / 3 / 9;
}

.three {
    grid-area: 2 / 9 / 3 / -1;
}

.four {
    grid-area: 3 / 1 / 4 / 5;
}

.five {
    grid-area: 3 / 5 / -2 / -1;
}

.six {
    grid-area: 4 / 1 / 5 / 5 ;
}

.seven {
    grid-area: 5 / 1 / 6 / 5;
}


.eight {
    grid-area: 1 / 1 / 2 / -1;
  } */

/* ------------------------------------------------------- */
/* 
.grid {
    background-color: #ddd;
    padding: 20px;
    width: 800px;
    height: 400px;
    gap: 10px;
    display: grid;
    grid-template-columns: auto auto;
    align-content: space-between;
    
  }


.grid div {
    background-color: blueviolet;
    color: white;
    text-align: center;
} */
/* ------------------------------------------------------ */
/* 
* {
  box-sizing: border-box;
  font-family: Arial, Helvetica, sans-serif;
}

.container {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-template-rows: repeat(15, 1fr);
  background: #ddd;
  gap: 5px;
  padding: 15px;
}

.nav1 {
  grid-area: 1 / 1 / 5 / 7;
  background: white;
}

.nav2 {
  grid-area: 1 / 7 / 5 / 10;
  background-color: white;
}

.leftSide {
  grid-area: 1 / 10 / 13 / -1;
  background-color: black;
  color: white;
}

.rightSide {
  grid-area: 5 / 1 / 13 / 4;
  background-color: white;
}

.sec1 {
  grid-area: 5 / 4 / 9 / -4;
  background-color: black;
  color: white;
}

.sec2 {
  grid-area: 9 / 4 / 13 / -4;
  background-color: white;
}

.foot1 {
  grid-area: 13 / 1 / -1 / 4;
  background-color: white;
}

.foot2 {
  grid-area: 13 / 4 / -1 / 7;
  background-color: black;
  color: white;
}

.foot3 {
  grid-area: 13 / 7 / -1 / 10;
  background-color: white;
}

.foot4 {
  grid-area: 13 / 10 / -1 / -1;
  background-color: white;
}

.container div {
  padding-left: 10px;
}

.p1 {
  padding-bottom: 10px;
  font-weight: bold;
}

h5 {
  opacity: 0.5;
}

.nav1,
.nav2,
.leftSide,
.rightSide,
.sec1,
.sec2,
.foot1,
.foot2,
.foot3,
.foot4 {
    border-bottom: solid orangered 3px;
} */
/* --------------------------------------------------------- */


/* div {
    width: 300px;
    height: 200px;
    margin: 100px auto;
    background-color: #eee;
    display: flex;
    justify-content: center;
    align-items: center;
    color:#1cb0f3 ;
    font-weight: bold;
    font-size: 40px;
    position: relative;
}

div::before {
    content:'';
    width: 100%;
    height: 100%;
    position:absolute;
    top: 0;
    left: 0;
    background-color: #e91e63;
    z-index: -2;
    transform: rotate(10deg);
}

div::after {
    content:'';
    width: 100%;
    height: 100%;
    position:absolute;
    top: 0;
    left: 0;
    background-color: #1cb0f3;
    z-index: -1;
    transform: rotate(-10deg);
} */

/* ----------------------------------------------------- */

/* 
The margin: auto; on the div element does indeed center
it both horizontally and vertically within the grid container.
Here's how this works:

display: grid; is set on the body element, which make
s it a grid container.

margin: auto; applied to the div element has a special
behavior when used in a grid context. In this context,
it centers the element both horizontally and vertically
within its grid cell. This is a grid-specific behavior
that makes it possible to center
an element vertically using margin: auto; within a grid.

So, in your code, display: grid; combined with margin: auto;
on the div element effectively centers the div both
horizontally and vertically within the grid cell
, making it appear as if the div is vertically centered.
This is a convenient way to center content within a grid container
, both horizontally and vertically.

*/




/* * {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

body {
    height: 100vh;
    display: grid;
}

div{
    width: 200px;
    height: 200px;
    margin: auto;
    background-color: #eee;
    text-align: center;
    line-height: 180px;
    font-weight: bold;
    font-size: 30px;
    border-radius: 50%;
    border: solid 10px #e91e63;
    border-left: solid 10px white;
    position: relative;

}


div::after {
    content:'';
    width: 100%;
    height: 100%;
    background-color: #1cb0f3;
    position:absolute;
    top: -20px;
    left: -20px;
    z-index: -1;
    border: #1cb0f3 20px solid;
    border-radius: 50%;
    border-right: solid 20px white;
} */

/* ----------------------------------------------------- */
/* * {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
  }
  
  body {
    height: 100vh;
    display: grid;
    place-items: center;
  }
  
  div {
    width: 200px;
    height: 200px;
    background-color: #eee;
    text-align: center;
    line-height: 180px;
    font-weight: bold;
    font-size: 30px;
    border-radius: 50%;
    border: solid 10px #e91e63;
    border-left: solid 10px white;
    position: relative;
  }
  
  div::after {
    content: '';
    width: 100%;
    height: 100%;
    background-color: #1cb0f3;
    position: absolute;
    top: -20px;
    left: -20px;
    z-index: -1;
    border: #1cb0f3 20px solid;
    border-radius: 50%;
    border-right: solid 20px white;
  } */
  
/* ------------------------------------------------------- */

/* * {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
  }
  
  body {
    height: 100vh;
    display: grid;
    place-items: center;
  }
  
  div {
    width: 200px;
    height: 200px;
    background-color: #eee;
    text-align: center;
    line-height: 180px;
    font-weight: bold;
    font-size: 30px;
    border-radius: 50%;
    position: relative;
  }
  
  div::before {
    content: '';
    width: 100%;
    height: 100%;
    background-color: #e91e63;
    position: absolute;
    top: -10px;
    left: -10px;
    z-index: -1;
    border: #e91e63 10px solid;
    border-radius: 50%;
    border-left: solid 10px white;
    transition-duration: 0.9s;
  }

  div::after{
    content: '';
    width: 100%;
    height: 100%;
    background-color: #1cb0f3;
    position: absolute;
    top: -20px;
    left: -20px;
    z-index: -2;
    border: #1cb0f3 20px solid;
    border-radius: 50%;
    border-right: solid 20px white;
    transition-duration: 0.9s;
    
  }

div:hover::after{
    transform: rotate(360deg);
}

div:hover::before{
    transform: rotate(-360deg);
} */

/* ------------------------------------------------- */

/* :root {
    --bgcolor: #ff5722;
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

h1 {
    background-color: var(--bgcolor);
    margin: 80px auto;
    width: 150px;
    padding: 20px;
    text-align: center;
    color: white;
    position: relative;
}

h1::before, h1::after {
    height: 95%;
    width: 95%;
    position: absolute;
    top: 50%;
    left: 50%;
    color: white;
    
}

h1::before {
    content:'';
    background-color: var(--bgcolor);
    z-index: -1;
    transform: translate(-50%, -50%) skew(20deg) rotate(15deg) ;
}

h1::after {
    content:'';
    background-color: var(--bgcolor);
    z-index: -2;
    transform: translate(-50%, -50%) skew(-20deg) rotate(-15deg) ;
} */




/* --------------------------------------------- */


/* :root {
    --bgcolor: #009688;
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

h1 {
    background-color: var(--bgcolor);
    margin: 80px auto;
    width: 150px;
    padding: 20px;
    text-align: center;
    color: white;
    position: relative;
}

h1::before {
    content: '';
    width: 12%;
    height: 100%;
    background-color: var(--bgcolor);
    position: absolute;
    left: -14px;
    top: 0px;
    border-right: solid 10px white;
    transform: skew(20deg);
} */

/* ----------------------------------------- */

/* transform: matrix(3, 0.2679, 0, 3, 20, 100); 
transform : translateX(20) translateY(100) scaleX(3) skewY(0,2679) skewX(0) scaleY(3);  
*/

/* ------------------------------------------------ */
/* * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    display: grid;
    justify-content: center;
    place-items: center;
    height: 100vh;
}
div {
    width: 200px;
    height: 200px;
    background-color: rgb(67, 131, 4);
    border-bottom: black solid 10px;
    position: relative;
    
}

div::after {
    content: 'Elzero';
    font-weight: bold;
    color: white;
    position: absolute;
    bottom: 0;
    padding: 10px;
}

div::before {
    content: '';
    background-color: black;
    width: 68%;
    height: 68%;
    position: absolute;
    top: -69px;
    left: 27px;
    transform: rotate(44deg);
    border-right: white solid 10px;
    border-bottom: white solid 10px;
    
} */

/* --------------------------------------- */

/* * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    display: grid;
    justify-content: center;
    place-items: center;
    height: 100vh;
}
div {
    width: 200px;
    height: 200px;
    background-color: rgb(67, 131, 4);
    border-bottom: black solid 10px;
    position: relative;
    
}

div::after {
    content: 'Elzero';
    font-weight: bold;
    color: white;
    position: absolute;
    bottom: 0;
    padding: 10px;
}

div::before {
    content: '';
    background-color: black;
    position: absolute;
    top: 0;
    left: 0;
    width:  131.42px;
    height:  131.42px;
    transform-origin: left top;
    transform: rotate(-45deg);
    border-left: white solid 10px;
    border-bottom: white solid 10px;
} */

/* ----------------------------------------------- */
/* * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    display: grid;
    justify-content: center;
    place-items: center;
    height: 100vh;
    perspective: 400px;
}

div {
    width: 200px;
    height: 200px;
    position: relative;
    z-index: 1;
    transform-style: preserve-3d;
    transition: all 1s ease-in-out;
}

div:hover {
    transform: rotateX(-180deg);

}

div::after, div::before {
    color: white;
    width: 100%;
    height: 100%;
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    font-weight: bold;
    font-size: 20px;
    font-family: Arial, Helvetica, sans-serif;
    backface-visibility: hidden;
    
}

div::after {
    content: 'Front';
    background-color:#fa3664;
    z-index:2;
    
}

div::before {
    content: 'Back';   
    background-color:#1692fc;
    z-index:3;
    transform: rotateX(180deg);
    
} */



/* ------------------------------------------------ */

